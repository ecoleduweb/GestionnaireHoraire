name: Deployer LLIO PROD
on:
  push:
    branches:
      - prod
      - JL_AutoDeployProd

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Full Application
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{secrets.PROD_SSH_HOST}}
          key: ${{secrets.PROD_SSH_KEY}}
          username: ${{ secrets.PROD_SSH_USERNAME}}
          debug: true
          script: |
            set -e # Exit immediately if a command exits with a non-zero status.
            echo "Starting deployment process..."

            # Arrêt des services
            echo "Stopping services..."
            sudo systemctl stop llio-api.service || echo "API service not running"
            sudo systemctl stop llio-frontend.service || echo "Frontend service not running"

            # Copie du fichier de logs
            echo 'Moving logs file to logs backup folder'
            mkdir -p /root/logs
            DATE=$(date +'%Y-%m-%d_%H-%M')
            [ -f "/root/var/www/GestionnaireHoraire/API/logs.txt" ] && cp /root/var/www/GestionnaireHoraire/API/logs.txt /root/logs/logs_llio_$DATE.txt

            # Suppression et récréation du répertoire GestionnaireHoraire
            echo "Refreshing project directory..."
            cd /root/var/www
            rm -rf GestionnaireHoraire

            # Clone du projet (plus propre qu'un pull)
            echo "Cloning fresh repository..."
            git clone -b prod https://github.com/ecoleduweb/GestionnaireHoraire.git

            # Configuration API
            echo "Configuring API..."
            cd /root/var/www/GestionnaireHoraire/API
            cat > .env << EOF
            DB_USER=${{ secrets.PROD_DB_USER }}
            DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
            DB_HOST=${{ secrets.PROD_DB_HOST }}
            DB_PORT=${{ secrets.PROD_DB_PORT }}
            DB_NAME_RUN=${{ secrets.PROD_DB_NAME_RUN }}
            ENV=${{ secrets.PROD_ENV }}
            AZUREAD_CLIENT_ID=${{ secrets.PROD_AZUREAD_CLIENT_ID }}
            AZUREAD_CLIENT_SECRET=${{ secrets.PROD_AZUREAD_CLIENT_SECRET }}
            AZUREAD_CALLBACK_URL=${{ secrets.PROD_AZUREAD_CALLBACK_URL }}
            SESSION_MAX_AGE=${{ secrets.SESSION_MAX_AGE }}
            SESSION_SECRET=${{ secrets.PROD_SESSION_SECRET }}
            FRONTEND_URL=${{ secrets.PROD_FRONTEND_URL }}
            ENABLE_TRACING=true
            TRACE_URL=https://telemetry.edwrdl.ca/traces
            APPLICATION_NAME=API_LLIO_PROD
            JWT_SECRET_KEY=${{ secrets.PROD_JWT_SECRET_KEY }}
            EOF

            echo "Building API..."
            /usr/local/go/bin/go mod tidy
            /usr/local/go/bin/go build -o app

            # Configuration Frontend
            echo "Configuring Frontend..."
            cd /root/ProjetLLIO2025/GestionnaireHoraire/LLIO2025
            cat > .env << EOF
            VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
            PUBLIC_ENABLED_TELEMETRY=true
            PUBLIC_TRACE_URL=https://telemetry.edwrdl.ca/traces
            PUBLIC_APPLICATION_NAME=LLIO_PROD
            EOF

            echo "Building Frontend..."
            npm install
            npm run build

            # Démarrage des services
            echo "Starting services..."
            sudo systemctl start llio-api || echo "Failed to start API service"
            sudo systemctl start llio-frontend || echo "Failed to start Frontend service"

            # Vérification
            echo "Checking services status..."
            sudo systemctl status llio-api --no-pager
            sudo systemctl status llio-frontend --no-pager

            echo "Deployment completed successfully!"
