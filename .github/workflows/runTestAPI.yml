name: Test BackEnd Go
on:
  push:
    branches:
      - JL_runTestAPI
  pull_request:
    paths:
      - "API/**"

jobs:
  unit-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Install dependencies
        working-directory: API
        run: go mod tidy

      - name: Create env file
        working-directory: API
        run: |
          cat > .env << EOF
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=dev.edwrdl.ca
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME_RUN=${{ secrets.DB_NAME_RUN }}
          DB_NAME_TEST=${{ secrets.DB_NAME_TEST }}
          ENV=TEST
          AZUREAD_CLIENT_ID=${{ secrets.AZUREAD_CLIENT_ID }}
          AZUREAD_CLIENT_SECRET=${{ secrets.AZUREAD_CLIENT_SECRET }}
          AZUREAD_CALLBACK_URL=${{ secrets.AZUREAD_CALLBACK_URL }}
          SESSION_MAX_AGE=${{ secrets.SESSION_MAX_AGE }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          EOF

      - name: Verify database connection
        run: |
          sudo apt-get update
          sudo apt-get install -y mariadb-client
          mariadb --no-defaults -uLLIODBADMIN -pBADWjiwaHBDlWBDkjHDGWAdglwaUGDhagdhg1l123y12o873y213GDKLJgaljkwhd -hdev.edwrdl.ca -P3306 LLIO2025_TEST -e "SELECT 'Connection test successful';"

      - name: Run tests
        working-directory: API
        run: |
          echo "::group::Exécution des tests Go"
          go test -v ./tests/...
          TEST_EXIT_CODE=$?
          echo "::endgroup::"

          echo ""
          echo "=== Résumé des Tests ==="
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "✅ Tous les tests ont réussi! 🎉"
          else
            echo "❌ Certains tests ont échoué. Consultez les détails ci-dessus."
          fi

          # Extraction des résultats des tests pour un rapport plus détaillé
          echo ""
          echo "=== Détails des Tests ==="
          go test -v ./tests/... | grep -E "^=== RUN|^--- PASS|^--- FAIL" | while read -r line; do
            if [[ $line == *"=== RUN"* ]]; then
              TEST_NAME=$(echo $line | awk '{print $3}')
              echo -n "Test: $TEST_NAME - "
            elif [[ $line == *"--- PASS"* ]]; then
              DURATION=$(echo $line | awk '{print $4}')
              echo "✅ RÉUSSI ($DURATION)"
            elif [[ $line == *"--- FAIL"* ]]; then
              DURATION=$(echo $line | awk '{print $4}')
              echo "❌ ÉCHOUÉ ($DURATION)"
            fi
          done

          exit $TEST_EXIT_CODE
